require 'rubygems'

# FIXME Fix the class conflict between rawr bundler and bundler we currently cannot use both at the same time
PACKAGE = false

if PACKAGE then
  require 'rawr'
else
  require 'bundler'
  begin
    Bundler.setup(:default, :development, :test, :pkg)
  rescue Bundler::BundlerError => e
    $stderr.puts e.message
    $stderr.puts "Run `bundle install` to install missing gems"
    exit e.status_code
  end
end

require 'rake'
require 'rake/clean'
require 'rake/gempackagetask'
require 'rake/rdoctask'
require 'rake/testtask'
require 'rspec/core/rake_task'
#require 'spec/rake/spectask'
require 'yaml'

Rake::RDocTask.new do |rdoc|
  files =['README', 'LICENSE', 'engine/lib/**/*.rb']
  rdoc.rdoc_files.add(files)
  rdoc.main = "README" # page to start on
  rdoc.title = "Your project Docs"
  rdoc.rdoc_dir = 'doc/rdoc' # rdoc output folder
  rdoc.options << '--line-numbers'
end

Rake::TestTask.new do |t|
  t.test_files = FileList['engine/test/**/*.rb']
end

#RSpec::Core::RakeTask.new do |t|
#  t.pattern = 'test/ruby/spec/**/*_spec.rb'
#  t.rspec_opts = nil
#end

desc "Launch rspec tests"
task :spec do
  puts "Not working !!! use `jruby -S spec engine/test/spec/ -c` in a terminal "
end
# Setup default global constant
env ||= ENV['env']
env = "development" unless env

APP_ENV = env
ROOT_DIR = File.dirname(__FILE__)
IS_FROM_JAR = false

# import custom rake tasks
Dir.glob(File.dirname(__FILE__)+"/engine/config/tasks/*.rake").each {|file| import file }