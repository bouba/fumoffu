#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-
# fumoffu Copyright (c) 2011 Lionel Abderemane <alionel@gmail.com>
# 
# See LEGAL and LICENSE for additional licensing information.
#

# A script that will pretend to resize a number of images
require 'optparse'
require 'rubygems'
require 'fumoffu'
require 'rake'


options = {}
bundle_format = [:jar, :exe, :app]

optparse = OptionParser.new do|opts|
  # Set a banner, displayed at the top
  # of the help screen.
  opts.banner = "Usage: fumoffu [options] dir_name"


  options[:install] = false
  options[:project_dir] = nil
  opts.on( '-i', '--install [FILE]', 'Install the skeleton of the fumoffu App' ) do |dir|
    options[:install] = true
    options[:project_dir] = dir
  end

  options[:bundle] = nil
  opts.on("-b", "--bundle [BUNDLE]", bundle_format,
          "Bundle the application to the chosen format (jar, exe, app)") do |format|
         options[:bundle] = format
  end

  options[:dependencies] = false
  opts.on("-d", "--dependencies", "Download and install the dependencies") do
    options[:dependencies] = true
  end

  # This displays the help screen, all programs are
  # assumed to have this option.
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

optparse.parse!

def jruby_jar
  # we check if the jruby jar is in the libs if not we download it
  if not File.exist? Fumoffu::Application.app_dir+"/interface/lib/java/jruby-complete.jar" then
    puts "We download the last stable version of jruby-complete jar..."
    sh "rake -f #{File.dirname(__FILE__)}/../tasks/rawr_bundle.rake rawr:get:current-stable-jruby"
    sh "mv #{Fumoffu::Application.app_dir}/lib/java/jruby-complete.jar #{Fumoffu::Application.app_dir}/interface/lib"
    sh "rmdir #{Fumoffu::Application.app_dir}/lib/java"
    sh "rmdir #{Fumoffu::Application.app_dir}/lib"
  end
end

begin
  if options[:install] then
    project_dir = "."
    if not options[:project_dir].nil? then
      project_dir = options[:project_dir]
      mkdir_p project_dir
      Fumoffu::Application.app_dir = project_dir
    end
    
    app = Fumoffu::Application.new
    Fumoffu::Generators::Application.generate
    # we add the missing gems
    puts "Installing default packages ..."
    Dir.chdir project_dir do 
      sh "bundle install --path engine/lib/ruby"
    end
    exit
  end
  
  if not options[:bundle].nil? 
    if bundle_format.include? options[:bundle].to_sym then
      task = nil
      jruby_jar
      if options[:bundle] == :jar
        task = "rawr:jar"
      else
        task = "rawr:bundle:#{options[:bundle]}"
      end
      sh "rake -f #{File.dirname(__FILE__)}/../tasks/rawr_bundle.rake #{task}"
      exit
    end
  end
  
  if options[:dependencies] then
    jruby_jar
    exit
  end

  puts "Invalid command line."
end
#
# Sample to handle argument
#
#ARGV.each do|f|
# puts "Resizing image #{f}..."
#end