#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-
# fumoffu Copyright (c) 2011 Lionel Abderemane <alionel@gmail.com>
# 
# See LEGAL and LICENSE for additional licensing information.
#

# A script that will pretend to resize a number of images
require 'optparse'
require 'rubygems'
require 'fumoffu'
require 'rake'
options = {}

optparse = OptionParser.new do|opts|
  # Set a banner, displayed at the top
  # of the help screen.
  opts.banner = "Usage: fumoffu [options] dir_name"

  # Define the options, and what they do
  options[:verbose] = false
  opts.on( '-v', '--verbose', 'Output more information' ) do
    options[:verbose] = true
  end

  options[:install] = false
  opts.on( '-i', '--install', 'Install the skeleton of the fumoffu App' ) do
    options[:install] = true
  end

  options[:logfile] = nil
  opts.on( '-l', '--logfile FILE', 'Write log to FILE' ) do|file|
    options[:logfile] = file
  end

  # This displays the help screen, all programs are
  # assumed to have this option.
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

optparse.parse!

puts "Being verbose" if options[:verbose]
puts "Being quick" if options[:quick]
puts "Logging to file #{options[:logfile]}" if options[:logfile]

begin
  if options[:install] then
    app = Fumoffu::Application.new
    Fumoffu::Generators::Application.generate
    # we add the missing gems
    puts "Installing default packages ..."
    sh "bundle install"
    puts "Downloading the last stable jruby jar  ..."
    sh "rake rawr:get:current-stable-jruby"
  end
end
#
# Sample to handle argument
#
#ARGV.each do|f|
# puts "Resizing image #{f}..."
#end